from lib.usb.device import Device


class Ether(Device):
    def __init__(self, name, idVendor, idProduct,
                 serial, manufacturer, product):
        return super().__init__(name, idVendor, idProduct,
                                serial, manufacturer, product)

    def _customConfig(self, *args, **kwargs):
        utils.log(os.geteuid())

        path = os.path.join(self._path, "functions", "ecm.usb0")
        os.makedirs(path, exist_ok=True)

        SERIAL="$(grep Serial /proc/cpuinfo | sed 's/Serial\s*: 0000\(\w*\)/\1/')"
		MAC="$(echo ${SERIAL} | sed 's/\(\w\w\)/:\1/g' | cut -b 2-)"
		hostMac="12$(echo ${MAC} | cut -b 3-)"
		devMac="02$(echo ${MAC} | cut -b 3-)"


        with open(os.path.join(path, "host_addr"), 'w') as file:
            file.write(hostMac)

        with open(os.path.join(path, "dev_addr"), 'w') as file:
            file.write(devMac)

        os.symlink(path, os.path.join(self._path, "configs", "c.1", "ecm.usb0"))

        with open(os.path.join(path, "UDC"), 'w') as file:
            file.write('\n'.join(os.listdir("/sys/class/udc")))
			
		#interface stuff here
		file_path = "/etc/network/interfaces"
		text = "\nallow-hotplug usb0  \niface usb0 inet static  \naddress 192.168.100.1 \nnetmask 255.255.255.0\nnetwork 192.168.100.0\nbroadcast 192.168.100.255"
		with open(file_path, 'a') as file:
            file.write(text)
		process = subprocess.Popen('apt-get install -y dnsmasq', shell=True, executable="/bin/bash")
		process.wait()

		process = subprocess.Popen('apt-get install -y iptables-persistent', shell=True, executable="/bin/bash")
		process.wait()

		file_path = "/etc/dnsmasq.conf"
		text = "interface=usb0	\nlisten-address=192.168.100.1 \nbind-interfaces	\nserver=8.8.8.8	\ndomain-needed	\nbogus-priv	\ndhcp-range=192.168.100.50,192.168.100.150,12h	"
		with open(file_path, 'a') as file:
            file.write(text)

		file_path = "/etc/sysctl.conf"
		text = "net.ipv4.ip_forward=1"
		writeFile(file_path, text, 'a')

		file_path = "/proc/sys/net/ipv4/ip_forward"
		text = "1"
		writeFile(file_path, text, 'w')

		file_path = "/etc/iptables/rules.v4"
		text = "-t nat -A POSTROUTING -o wlan0 -j MASQUERADE \n-A FORWARD -i wlan0 -o usb0 -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A FORWARD -i usb0 -o wlan0 -j ACCEPT"
		with open(file_path, 'a') as file:
            file.write(text)

		process = subprocess.Popen('service  dnsmasq start', shell=True, executable="/bin/bash")
		process.wait()

		os.system("sudo reboot")