from lib.usb.device import Device


class Ether(Device):
    def __init__(self, name, idVendor, idProduct,
                 serial, manufacturer, product):
        return super().__init__(name, idVendor, idProduct,
                                serial, manufacturer, product)

    def _customConfig(self, *args, **kwargs):
        utils.log(os.geteuid())

        path = os.path.join(self._path, "functions", "ecm.usb0")
        os.makedirs(path, exist_ok=True)

        devMac="48:6f:73:74:50:43" # "HostPC"
        selfMac="42:61:64:55:53:42" # "BadUSB"

        with open(os.path.join(path, "host_addr"), 'w') as file:
            file.write(hostMac)

        with open(os.path.join(path, "dev_addr"), 'w') as file:
            file.write(devMac)

        os.symlink(path, os.path.join(self._path, "configs", "c.1", "ecm.usb0"))

        with open(os.path.join(path, "UDC"), 'w') as file:
            file.write('\n'.join(os.listdir("/sys/class/udc")))