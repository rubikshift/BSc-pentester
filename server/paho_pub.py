import time
import paho.mqtt.client as mqtt

def on_message(self,userdata,message):
    print("recive message=",str(message.payload.decode("utf-8")))
    if str(message.payload.decode("utf-8")) == '[{"name":"attack_name","data":"3100"}]':
        self.Send('[{"name":"receive","data":"0000"}]')

class Thing(mqtt.Client):
    def __init__(self,external_id, external_key, url):
        super(Thing, self).__init__()
        self.LoadConfig()
        self.username_pw_set( self.id , self.key)
        self.on_message=on_message
        self.connect(self.broker_address)
        
    def Start(self):
        self.loop_start()
        self.subscribe(topic = "channels/" + self.channel_sub_id + "/messages")
        
    def End(self):
        self.disconnect()
        self.loop_stop()
    
    def LoadConfig(self):
        self.broker_address = "165.22.121.233"
        self.id = "3a9ece9d-df22-426d-b0a6-6c6fb6ead87e"
        self.key = "a3ce6a97-f91c-442b-9776-e58a43dd09c5"
        self.channel_sub_id = "2aed73b7-949c-4293-a2b2-d79d5019a1dd"
        self.channel_pub_id = "cdd7c531-bc03-46ae-8852-8a2502a68463"
        
    def Send(self,payload):
        self.publish("channels/" + self.channel_pub_id + "/messages" , payload)


thing = Thing(1,1,"url")
thing.Start()
time.sleep(1)
thing.Send('[{"name":"attack_name","data":"3100"}]')
time.sleep(5)
thing.End()