#!/usr/bin/env python3
import os
import re
import sys
from datetime import datetime
from subprocess import Popen, PIPE, STDOUT


def log(*args):
    for arg in args:
        if arg is not None:
            print(f"{datetime.now()}\t{arg}")


def getRoot():
    if os.geteuid() != 0:
        log("Root required, getting privileges")
        os.execvp('sudo', ['sudo', 'python3'] + sys.argv)


def writeFile(path, text, mode):
    with open(path, mode) as opened_file:
        opened_file.write(text)


def aptInstall(*requirements):
    def _parse(output):
        return list(filter(None, re.sub(r"^((?!E:).)*\n", "", output.decode("utf-8"), flags=re.MULTILINE | re.DOTALL).strip().split('\n')))

    if len(requirements) == 0:
        raise RuntimeError

    log("Update")
    output, error = Popen(["apt-get", "update", "-y"], stdout=PIPE, stderr=STDOUT).communicate()
    # apt-get returns errors in output
    log(*_parse(output))
    log(error)

    for requirement in requirements:
        log(f"Install {requirement}")
        output, error = Popen(["apt-get", "install", "-y", requirement], stdout=PIPE, stderr=STDOUT).communicate()
        # apt-get returns errors in output
        log(*_parse(output))
        log(error)


def main():
    getRoot()
    aptInstall(
        "dnsmasq",
        "iptables-persistent",
    )

    file_path = "/boot/config.txt"
    append = "dtparam=spi=on \ndtoverlay=enc28j60 \ndtoverlay=dwc2 \n"
    writeFile(file_path, append, 'a')

    text = "dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=PARTUUID=e4ac4011-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait modules-load=dwc2,g_ether quiet splash plymouth.ignore-serial-consoles"
    file_path = "/boot/cmdline.txt"
    writeFile(file_path, text, 'w')

    file_path = "/etc/network/interfaces"
    text = "\nallow-hotplug usb0  \niface usb0 inet static  \naddress 192.168.100.1 \nnetmask 255.255.255.0\nnetwork 192.168.100.0\nbroadcast 192.168.100.255"
    writeFile(file_path, text, 'a')

    file_path = "/etc/dnsmasq.conf"
    text = "interface=usb0	\nlisten-address=192.168.100.1 \nbind-interfaces	\nserver=8.8.8.8	\ndomain-needed	\nbogus-priv	\ndhcp-range=192.168.100.50,192.168.100.150,12h	"
    writeFile(file_path, text, 'a')

    file_path = "/etc/sysctl.conf"
    text = "net.ipv4.ip_forward=1"
    writeFile(file_path, text, 'a')

    file_path = "/proc/sys/net/ipv4/ip_forward"
    text = "1"
    writeFile(file_path, text, 'w')

    file_path = "/etc/iptables/rules.v4"
    text = "-t nat -A POSTROUTING -o wlan0 -j MASQUERADE \n-A FORWARD -i wlan0 -o usb0 -m state --state RELATED,ESTABLISHED -j ACCEPT \n-A FORWARD -i usb0 -o wlan0 -j ACCEPT"
    writeFile(file_path, text, 'a')

    process = Popen('service dnsmasq start', shell=True, executable="/bin/bash")
    process.wait()

    os.system("sudo reboot")


if __name__ == "__main__":
    main()
